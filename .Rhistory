## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
mean(1-data[i,1]/data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
1-mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
1-mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
1-mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",vs_1],scores[Name=="Empirical",vs_1]),
statistic = function(data, i){
1-mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",vs_1],scores[Name=="Empirical",vs_1]),
statistic = function(data, i){
1-mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
boot_data
boot.ci(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",vs_1],scores[Name=="Empirical",vs_1]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
boot.ci(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",vs_0_5],scores[Name=="Empirical",vs_0_5]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
boot.ci(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",ls],scores[Name=="Empirical",ls]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",ls],scores[Name=="Empirical",ls]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
boot.ci(boot_data)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
boot.ci(boot_data)
?boot
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000,strata=3)
## Bootstrap skill score
boot_data <- boot(data = cbind(scores[Name=="GAC",es],scores[Name=="Empirical",es]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
plot(boot_data)
boot.ci(boot_data)
names(scores)
names(scores)[-1:2]
names(scores)[-c(1:2)]
## Bootstrap skill score
for(s in names(scores)[-c(1:2)]){} # for all metrics and methods rel to empirical...
for(m in scores[,unique(Name)]){}
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
boot_data
## Bootstrap skill score
scores_boot <- data.table()
## Bootstrap skill score
scores_boot <- data.table()
boot_data$t
boot_data$t0
boot_data$t
print.boot
boot_data
m="es"
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
names(scores)
s
s="es"
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
scores[Name==m,get(s)]
m
m="GAC"
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
# plot(boot_data)
boot.ci(boot_data)
boot_data$t
sd(boot_data$t)
boot_data
# plot(boot_data)
boot.ci(boot_data)
# plot(boot_data)
ci <- boot.ci(boot_data)
ci$R
ci$normal
data.table(Name=m,Score==s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3])
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3])
## Bootstrap skill score
scores_boot <- data.table()
for(s in names(scores)[-c(1:2)]){ # for all metrics and methods rel to empirical...
for(m in scores[,unique(Name)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=10000)
# plot(boot_data)
ci <- boot.ci(boot_data)
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}
m
s
## Bootstrap skill score
scores_boot <- data.table()
for(s in names(scores)[-c(1:2)]){ # for all metrics and methods rel to empirical...
for(m in scores[Name!="Empirical",unique(Name)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
# plot(boot_data)
ci <- boot.ci(boot_data)
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}
rm(boot_data,ci)
rm(boot_data,ci,s,m)
scores_boot
## Bootstrap skill score
scores_boot <- data.table()
for(m in scores[Name!="Empirical",unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
# plot(boot_data)
ci <- boot.ci(boot_data)
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
## Bootstrap skill score
scores_boot <- data.table()
for(m in scores[Name!="Empirical",unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
# plot(boot_data)
ci <- boot.ci(boot_data)
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
boot_data
## Bootstrap skill score
scores_boot <- data.table()
for(m in scores[Name!="Empirical",unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name=="Empirical",get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
if(sd(boot_data$t)==0){
ci <- data.frame(normal=rep(NA,3))
}else{
ci <- boot.ci(boot_data)
}
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
ref <- "Constant"
## Bootstrap skill score
scores_boot <- data.table()
ref <- "Constant"
for(m in scores[Name!=ref,unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name==ref,get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
if(sd(boot_data$t)==0){
ci <- data.frame(normal=rep(NA,3))
}else{
ci <- boot.ci(boot_data)
}
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name==ref,get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
boot_data
boot_data
boot_data$t0
boot_data$t
sd(boot_data$t)
sd(boot_data$t)==0
NA | TRUE
## Bootstrap skill score
scores_boot <- data.table()
ref <- "Constant"
for(m in scores[Name!=ref,unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name==ref,get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
if(sd(boot_data$t)==0 | is.na(sd(boot_data$t))){
ci <- data.frame(normal=rep(NA,3))
}else{
ci <- boot.ci(boot_data)
}
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
## Bootstrap skill score
scores_boot <- data.table()
ref <- "Empirical"
for(m in scores[Name!=ref,unique(Name)]){
for(s in names(scores)[-c(1:2)]){
boot_data <- boot(data = cbind(scores[Name==m,get(s)],scores[Name==ref,get(s)]),
statistic = function(data, i){
100-100*mean(data[i,1])/mean(data[i,2])
},
R=1000)
if(sd(boot_data$t)==0 | is.na(sd(boot_data$t))){
ci <- data.frame(normal=rep(NA,3))
}else{
ci <- boot.ci(boot_data)
}
scores_boot <- rbind(scores_boot,
data.table(Name=m,Score=s,
Mean=mean(boot_data$t),SD=sd(boot_data$t),
ci_L=ci$normal[2],ci_R=ci$normal[3]))
}
}; rm(boot_data,ci,s,m)
scores_boot
seq(0,1,length.out=24)
seq(0,1,length.out=25)
seq(0,1,length.out=26)
seq(0,1,length.out=21)
r <- seq(0,1,length.out=21)
R <- as.matrix(dist(r))
N <- length(r)
Z <- matrix(rep(1:N,N) + rep(1:N,each=N) - 1, N, N)/(2*N-1)
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=1)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=1.5)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=1)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.1)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.7)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.5)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Z
r
Z <- matrix(rep(r,N) + rep(r,each=N), N, N)
Z
Z <- matrix(rep(r,N) + rep(r,each=N), N, N)
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.8)))$mat)
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
range(Z)
range(1/Z)
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
N <- length(r)
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.5)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.2)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(Z^2),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R
Z <- matrix(rep(r,N) + rep(r,each=N), N, N)/2 +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R
Z <- matrix(rep(r,N) + rep(r,each=N), N, N)/4 +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/Z,gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(1+Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(3+Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1+1/(Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=2+1/(Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
r <- seq(0,1,length.out=21)
R <- as.matrix(dist(r))
N <- length(r)
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
r <- seq(0,1,length.out=41)
R <- as.matrix(dist(r))
N <- length(r)
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
r <- seq(0,1,length.out=51)
R <- as.matrix(dist(r))
N <- length(r)
Z <- matrix(rep(r,N) + rep(r,each=N), N, N) +1
Cov_R <- as.matrix(nearPD(PowExp(R,params = list(sigma=1,theta=1/(Z),gamm=0.8)))$mat)
image(t(Z))
image(t(Cov_R))
# Empirical from simulation
data_sim <- mvnfast::rmvn(n = 1000,
mu=rep(0,ncol(Cov_R)),sigma = Cov_R)
Cov_R_sim <- cov(data_sim)
image(t(Cov_R_sim))
modelling_table <- data.frame(y=c(Cov_R_sim),
r=c(R),
x1=c(Z))
plot(x=modelling_table$r,
y=modelling_table$y,
col=rgb(1-modelling_table$x1,0,modelling_table$x1))
test_static_fit <- gac(R = R,
X = list(x1=Z),
Emp_Cov = Cov_R_sim,
cov_func = PowExp,
param_eqns = list(~1,
~1,
~1),
loss="LS")
test_static_fit$gac_coef
test_fit <- gac(R = R,
X = list(x1=Z),
Emp_Cov = Cov_R_sim,
cov_func = PowExp,
param_eqns = list(~1,
~s(x1,bs="bs"),
~1),
loss="WLSf",
smoothness_param = 1e-4)
image(t(test_fit$Cov_Est))
modelling_table$y_est <- c(test_fit$Cov_Est)
plot(x=modelling_table$r,
y=modelling_table$y_est,
col=rgb(1-modelling_table$x1,0,modelling_table$x1))
image(Cov_R_sim-nearPD(Cov_R_sim)$mat)
image(test_fit$Cov_Est-nearPD(test_fit$Cov_Est)$mat)
# Realisations
actuals <- mvnfast::rmvn(n = 1000,mu=rep(0,ncol(Cov_R)),sigma = Cov_R)
cov_mats <- list(Name=c("True","Empirical","Constant","GAC"),
mat=list(Cov_R,
nearPD(Cov_R_sim)$mat,
nearPD(test_static_fit$Cov_Est)$mat,
nearPD(test_fit$Cov_Est)$mat))
scores <- data.table(index=rep(1:nrow(actuals),length(cov_mats$Name)),
Name=rep(cov_mats$Name,each=nrow(actuals)))
for(cov_i in 1:length(cov_mats$Name)){
for(i in 1:nrow(actuals)){
# Draw sample trajectories
traj <- mvnfast::rmvn(n = 1000,mu=rep(0,ncol(Cov_R)),sigma = cov_mats$mat[[cov_i]])
# es and vs
scores[index==i & Name==cov_mats$Name[[cov_i]], es := es_sample(y=actuals[i,],dat = t(traj))]
scores[index==i & Name==cov_mats$Name[[cov_i]], vs_0_5 := vs_sample_quick(y=actuals[i,],dat = t(traj), p = 0.5)]
scores[index==i & Name==cov_mats$Name[[cov_i]], vs_1 := vs_sample_quick(y=actuals[i,],dat = t(traj), p = 1)]
# log score
scores[index==i & Name==cov_mats$Name[[cov_i]], ls := -log(mvnfast::dmvn(X = actuals[i,],mu = rep(0,ncol(actuals)),sigma = cov_mats$mat[[cov_i]]))]
# Entropy
scores[index==i & Name==cov_mats$Name[[cov_i]], entropy :=
cov_entropy(R_true = Cov_R,R_est = cov_mats$mat[[cov_i]])]
}
}
print(setorder(scores[,mean(es),by="Name"],V1))
print(setorder(scores[,mean(vs_0_5),by="Name"],V1))
print(setorder(scores[,mean(vs_1),by="Name"],V1))
print(setorder(scores[,mean(ls),by="Name"],V1))
